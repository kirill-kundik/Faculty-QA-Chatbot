version: '3.4'

services:

  bot:
    build:
      context: ./bot
    container_name: chatbot
    restart: always
    links:
      - web
      - redis
    depends_on:
      - web
      - redis
    volumes:
      - ./bot:/app
    environment:
      API_TOKEN: $BOT_API_TOKEN
      API_HOST: $API_HOST
      API_PORT: $WEB_APP_PORT
      SUPPORT_CHAT_ID: $SUPPORT_CHAT_ID
      DEBUG: $BOT_DEBUG
      REDIS_HOST: $REDIS_HOST
      REDIS_PORT: $REDIS_PORT
    networks:
      - backend
      - redisnet

  web:
    build:
      context: ./web_service
      args:
        PORT: $WEB_APP_PORT
        HOST: "0.0.0.0"
    container_name: chatbot_web
    volumes:
      - ./web_service:/app
    environment:
      APP_HOST: "0.0.0.0"
      APP_PORT: $WEB_APP_PORT
      PG_HOST: $PG_HOST
      PG_PORT: $POSTGRES_PORT
      PG_DB: $POSTGRES_DB
      PG_USER: $POSTGRES_USER
      PG_PASS: $POSTGRES_PASS
      ES_HOST: $ES_HOST
      ES_PORT: $ELASTIC_PORT
      SECRET_KEY: $SECRET_KEY
      PDF_URL: $PDF_URL
      QA_TXT_URL: $QA_TXT_URL
    ports:
      - "$WEB_APP_HOST:$WEB_APP_PORT:$WEB_APP_PORT"
    restart: always
    networks:
      - pgnet
      - esnet
      - backend
    links:
      - postgres
      - es
    depends_on:
      - postgres
      - es
    healthcheck:
      test: ["CMD", "curl", "-f", "http://$WEB_APP_HOST:$WEB_APP_PORT/healthCheck"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s

  es:
    image: elasticsearch:7.0.0
    container_name: chatbot_es
    environment:
      - discovery.type=single-node
    restart: always
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - "$ELASTIC_HOST:$ELASTIC_EXTERNAL_PORT:$ELASTIC_PORT"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      - esnet

  redis:
    image: redis:latest
    restart: always
    container_name: chatbot_redis
    volumes:
      - ./tmp/redis-db:/data
    ports:
      - "$REDIS_EXTERNAL_HOST:$REDIS_EXTERNAL_PORT:$REDIS_PORT"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - redisnet

  postgres:
    image: postgres:9.6
    container_name: chatbot_postgres
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASS
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - ./tmp/pg-db:/var/lib/postgresql/data
    ports:
      - "$POSTGRES_HOST:$POSTGRES_EXTERNAL_PORT:$POSTGRES_PORT"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - pgnet

volumes:
  esdata:
    driver: local
#  esdata02:
#    driver: local

networks:
  esnet:
  pgnet:
  redisnet:
  backend:
